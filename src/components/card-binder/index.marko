$ var XMLHttpRequest = require('xhr2');
class {
    onCreate() {
        this.state = {cards: null}
    }
    onMount() {
        var request = new XMLHttpRequest();
        var state = this.state;
        request.open('GET', this.input.apiUrl+"/"+this.input.collection+"/cards");
        request.responseType = 'json';
        // When the request loads, check whether it was successful
        request.onload = function() {
            console.log('loading all cards for a collection');
            if (request.status === 200) {
            // If successful, resolve the promise by passing back the request response
              state.cards = request.response;
            } else {
            // If it fails, reject the promise with a error message
              console.log(Error('Cards didn\'t load successfully; error'));
            }
        };
        request.send();
    }
}

<div class="row text-center" style="padding-top:10px;">
	<h2 style="margin-top:2px">Browse all cards</h2>
	<if(state.cards)>
        <for (card in state.cards.sort())>
            <div class="col-xs-6 col-sm-4 col-md-3" style="padding-bottom:10px">
                <div class="cardBinderItem">
                    <a href="/"+input.collection+"/cards/"+card> 
                        <img class="img-responsive" src=input.imgsrc+"/"+card+".jpg"/>
                        <div class="caption" style="word-wrap:break-word"><strong>${card}</strong></div>
                    </a>
                </div>
            </div>
        </for>
	</if>
</div>

style {
	div.cardBinderItem {
		padding: 5px;
	}
	.cardBinderItem .caption {
		color: black
	}
	.cardBinderItem:hover {
		background-color: #286090;
	}
	.cardBinderItem:hover .caption {
		color: #ffe990
	}
	@media screen and (max-width: 480px) {
		.caption {
			font-size: 12px ! important
		}
		.container {
			padding:1px ! important;
		}
	}
}
